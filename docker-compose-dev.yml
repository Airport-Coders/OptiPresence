version: '3.8'
services:
    scaffold-build:
        extends:
            file: docker-compose-common.yml
            service: scaffold-build

    #frontend-build:
    #    extends:
    #        file: docker-compose-common.yml
    #        service: frontend-build

    scaffold-chain:
        build:
            context: .
            dockerfile: Dockerfile.Node
        command: yarn chain
        volumes:
            - ./smartcontracts:/workspace
        ports:
            - '8545:8545'
        depends_on:
            scaffold-build:
                condition: service_completed_successfully
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://localhost:8545']
            interval: 5s
            timeout: 5s
            retries: 5

    scaffold-deploy:
        build:
            context: .
            dockerfile: Dockerfile.Node
        command: yarn deploy --network scaffold-chain
        volumes:
            - ./smartcontracts:/workspace

        depends_on:
            scaffold-chain:
                condition: service_healthy

    #scaffold-next:
    #    build:
    #        context: .
    #        dockerfile: Dockerfile.Node
    #    command: yarn start
    #    depends_on:
    #        scaffold-chain:
    #            condition: service_healthy
    #    volumes:
    #        - ./smartcontracts:/workspace
    #    ports:
    #        - '3000:3000'

    #frontend-serve:
    #    build:
    #        context: .
    #        dockerfile: Dockerfile.Node
    #    command: yarn dev
    #    volumes:
    #        - ./frontend:/workspace
    #    ports:
    #        - '3333:3333'
    #    depends_on:
    #        frontend-build:
    #            condition: service_completed_successfully

    backend-api:
        build:
            context: .
            dockerfile: Dockerfile.Python
        command: python3 main.py
        volumes:
            - ./backend:/workspace
            - ./smartcontracts/packages/hardhat/deployments:/deployments
        depends_on:
            scaffold-deploy:
                condition: service_completed_successfully
